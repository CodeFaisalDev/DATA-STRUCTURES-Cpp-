1. Stack Data strcture work as a stack. Imagine it as a pile of book or a stack of cards.
2. It works in a property called LIFO(Last in first out) or FILO(First in last out).
3. If a value enters in the stack first it will be come out at last or if a value enters last it will come out  first.

**Standard Stack Operations are :

    *	push() = To add a new value in the stack push() method is used. If there is no space for new value the stack will be in a overflow state.
    *	pop() = To remove a value from the stack pop() method is used. It will remove the last item in the stack becouse of LIFO. If pop() is called 
              when the stack is empty the stack will be in a underflow state.
    *	isEmpty() = It is to check if the stack is empty or not.
    *	isFull() = It is to check if the stack is full.
    *	peek() = Access the item in the given positon.
    *	count() = Counts the item in the Stack.
    *	change() = Change the item in the Stack.
    *	display() = Display all item in the Stack.

**Application of Stack Data Structure:
    
    * Balancing of symbols.
    * Infix to Postfix/Prifix conversion.
    * Redo and Undo feture in many places in program.
    * Forward and Backward fetures in web browsers.
    * Used in many Agorithms like, Tower of Hanoi, Tree Traversals, Stock Span Problem, Histogram Problem.
    * Other applications like Backtracking, Night Tour Problem, Rat in a Maze, N queeb problem, Sudoku solver.
    * In Graph Algorithm like Topological Sorting and Strongly connected components.
